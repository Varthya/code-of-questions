     boolean check(int i,int j,int [][]grid)
    {
        int n=grid.length;
        int m=grid[0].length;
        if(i>=0&&i<n&&j>=0&&j<m)
        {
          if(grid[i][j]==1)
          return true;
            else 
            return false;
        }
        return false;
    }
    public int islandPerimeter(int[][] grid) {
        
          int n=grid.length;
         int m=grid[0].length;
         int count=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {   
                if(grid[i][j]==0)continue;

               if(check(i-1,j,grid)==false) count++;
               if(check(i,j-1,grid)==false)count++;
               if(check(i,j+1,grid)==false)count++;
               if(check(i+1,j,grid)==false)count++;
            }
        }
        return count;
    }

JAAVASCRIPT CODE:
function check(i,j,grid)
 {
   let n=grid.length;
   let m=grid[0].length;
     if(i>=0&&i<n&&j>=0&&j<m)
     {
        if(grid[i][j]==0)return false;
        else return true;
     }
     else return false;
 }
var islandPerimeter = function(grid) {
     let n=grid.length;
     let m=grid[0].length;
     let ans=0;
     for(let i=0;i<n;i++) 
     {
        for(let j=0;j<m;j++)
        {
            if(grid[i][j]==0)continue;
             if(check(i-1,j,grid)==false) ans++;
             if(check(i+1,j,grid)==false)ans++;
             if(check(i,j+1,grid)==false)ans++;
             if(check(i,j-1,grid)==false) ans++;
        }
     }
      return ans;
};

